{
  "name": "Appoinment Booking copy",
  "nodes": [
    {
      "parameters": {
        "toolDescription": "pass the ID from patients",
        "method": "DELETE",
        "url": "=https://26d293a4577e.ngrok-free.app/api/appointments/{{ $fromAI(\"id\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -160,
        -48
      ],
      "id": "fc5000f6-cdf0-4ce4-938d-b95428433769",
      "name": "cancle"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://26d293a4577e.ngrok-free.app/api/appointments/{{ $fromAI(\"patientid\") }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "date",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `date eg: 2025-08-18`, 'string') }}"
            },
            {
              "name": "day",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `day`, 'string') }}"
            },
            {
              "name": "startTime",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `startTime`, 'string') }}"
            },
            {
              "name": "endTime",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `endTime`, 'string') }}"
            },
            {
              "name": "purposeOfMeet",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `purpose Of Meet`, 'string') }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        0,
        64
      ],
      "id": "41709c36-25fc-41c1-9ad8-2a79734be06c",
      "name": "reschedule"
    },
    {
      "parameters": {
        "url": "=https://26d293a4577e.ngrok-free.app/api/patients/email/{{ $fromAI(\"email\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        320,
        80
      ],
      "id": "8e7c7b23-1b5e-400b-8f32-6e20f7ad1961",
      "name": "patients"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://26d293a4577e.ngrok-free.app/api/book-slot",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "patientName",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `patient Name`, 'string') }}"
            },
            {
              "name": "phoneNo",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `phoneNo`, 'string') }}"
            },
            {
              "name": "age",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `age`, 'string') }}"
            },
            {
              "name": "purposeOfMeet",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `purpose Of Meet`, 'string') }}"
            },
            {
              "name": "doctorId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `doctor Id`, 'string') }}"
            },
            {
              "name": "date",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', `date`, 'string') }}"
            },
            {
              "name": "startTime",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters6_Value', `startTime`, 'string') }}"
            },
            {
              "name": "endTime",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters7_Value', `endTime`, 'string') }}"
            },
            {
              "name": "email",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters8_Value', `email`, 'string') }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        176,
        -16
      ],
      "id": "5d332123-d84d-4243-ab6a-560a076a2493",
      "name": "Booking"
    },
    {
      "parameters": {
        "toolDescription": "give the DoctorID in url",
        "url": "=https://26d293a4577e.ngrok-free.app/api/availability/{{ $fromAI(\"DoctorID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        480,
        -16
      ],
      "id": "47047542-203f-49af-a0b7-e6a01c63c983",
      "name": "Availability"
    },
    {
      "parameters": {
        "toolDescription": "to fetch doctors",
        "url": "https://26d293a4577e.ngrok-free.app/api/doctors",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "branchId",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `give here the Branch Id`, 'string') }}"
            },
            {
              "name": "specialization",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `here the specialization id`, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        656,
        80
      ],
      "id": "a386d235-2194-4767-bc42-0d36ac47cc94",
      "name": "Doctors"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -128,
        -736
      ],
      "id": "bc17e75c-5466-41aa-9ed4-6d69d055707e",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "JoNhtaXNtsqMpdgv",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "={{ $('WhatsApp Trigger').item.json.metadata.phone_number_id }}",
        "recipientPhoneNumber": "={{ $('WhatsApp Trigger').item.json.messages[0].from }}",
        "textBody": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        528,
        -560
      ],
      "id": "91cc114b-dd9c-4545-91c6-08fe0a22c901",
      "name": "Send message",
      "webhookId": "21c896cb-bb96-4887-85b2-fc265d69adcc",
      "credentials": {
        "whatsAppApi": {
          "id": "ZrlWhery0a9U2IJT",
          "name": "Suraj"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        272,
        -560
      ],
      "id": "66cf4fb7-a782-4de7-838b-8e6f4cde5809",
      "name": "WhatsApp Trigger",
      "webhookId": "72ccf1bf-1bf1-4177-a47a-2ba7caa543c1",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "25JD1aTdJS8Y1Ejd",
          "name": "Suraj"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.metadata['phone_number_id'] }}44444"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -256,
        -464
      ],
      "id": "bc5b371f-c5b6-4245-8a93-203e1d2ed122",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -288,
        -224
      ],
      "id": "e4e2952c-d343-41d1-b8bf-4486ff1c6893",
      "name": "Send a message in Gmail",
      "webhookId": "9c80cd4c-8c09-4bc1-a99f-df301fddb7e2",
      "credentials": {
        "gmailOAuth2": {
          "id": "1F37zF2micVnAPHl",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Create an event in Google Calendar",
        "calendar": {
          "__rl": true,
          "value": "surajmorecombat@gmail.com",
          "mode": "list",
          "cachedResultName": "surajmorecombat@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
          ],
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1104,
        -144
      ],
      "id": "5882974c-bc1f-455e-a3ea-57fd893f5a34",
      "name": "Create appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "pQ50YuBgrhsyhAJj",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "surajmorecombat@gmail.com",
          "mode": "list",
          "cachedResultName": "surajmorecombat@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "attendeesUi": {
            "values": {
              "attendees": [
                "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
              ]
            }
          },
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1072,
        -528
      ],
      "id": "0a12af57-130d-4390-ae2d-c7c93cf9963c",
      "name": "Update appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "pQ50YuBgrhsyhAJj",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Delete an event in Google Calendar",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "surajmorecombat@gmail.com",
          "mode": "list",
          "cachedResultName": "surajmorecombat@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1104,
        -336
      ],
      "id": "b6c76955-5fcf-4405-9fc5-2a85e02f568b",
      "name": "cancle appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "pQ50YuBgrhsyhAJj",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get many events in Google Calendar",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "surajmorecombat@gmail.com",
          "mode": "list",
          "cachedResultName": "surajmorecombat@gmail.com"
        },
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        976,
        -704
      ],
      "id": "10e9665e-186b-46c7-9066-582b4eecfcf7",
      "name": "fetch  appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "pQ50YuBgrhsyhAJj",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://26d293a4577e.ngrok-free.app/api/hospitals",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "city",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `add the city name`, 'string') }}"
            },
            {
              "name": "specialization",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `add the specializationIds`, 'string') }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1088,
        112
      ],
      "id": "711cda04-30d7-4284-aa9a-5089259a4b93",
      "name": "city"
    },
    {
      "parameters": {
        "url": "https://26d293a4577e.ngrok-free.app/api/specialisations",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        880,
        48
      ],
      "id": "f900497e-68bd-4bc6-b60a-c29869c7f77c",
      "name": "Specialisation"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}\n(Most Important No Memory Assumptions)",
        "options": {
          "systemMessage": "=(Most Important No Memory Assumptions)\nYou are Appoinment Scheduling  Bot Your Core Objective is to Asking the User in which city the user wants to Book an appointment\nand for what purpose or Illness \nas per it you need first fetch the proper Specialisation from \"Specialisation tool\" and take the spcialisation id and fetch the hospitals in \"City tool\" and show it to the user.\nAfter this if the user confirms that they want to book appoinment from any of the listed Hospitals then with the spcialisation id(\"id\" from Specialisation tool) and the branchId(\"branchId\" from city tool ) fetch the doctors (no memory assumptions fresh data require). (You must show the Doctors for the Hospital the user want)\n\n# Avalibilty tool\nAfter the User selects the Doctor to book an appoiment then you must use \"Availability\" tool and pass the Doctor ID(id) in it.\nshow the all the details in Numbers and show it to the user.\nafter the user books a slot then ask the details.\n\nafter this if the user says that they want to book appoinment then ask them the details like patientName, phoneNo(having the country code), age, purposeOfMeet,email(validate email format)\nand this '\"doctor Id(id)\",\"day\",\"startTime\",\"endTime\"' should be as per this call the \"Booking Tool\" (be carefull while giving the doctorId it should be valid No memory Assumptions get the fresh data)\nthe startTime and endTime should not contian AM and PM\n-after appointment booked using \"Booking Tool\" event create in \"Create appointment tool\" and in \"Summary\" store patient name,email,purposeOfMeet.\n- after appointment is booked send an email to user enter mail that your appointment is booked successfully with \"Summary\" data.\n- Most Important thing: Use Fresh Data To find the doctorId, branchId, spcialisation id etc. fetch this from available tools, No memory Assumptions strictly.\nNo memory Assumptions get all the fresh data\nand also for the ID's make sure you get the rigth id's to right place.\n\n# If the user want to reschedule the Appoinment ask for the email then fetech the data from 'patients' tool by giving the email parameter\n(don't forget below step to fetch available slots by using Availability tool)\nlater show the available slots for the particular doctor by fetch the data of available slots from \"Availability\" tool and then use the \"reschedule\" tool to reschedule the appoinment, when rescheduling the appoinment make sure the patient id is proper no memory asumptions get fresh data\n- before appointment reschedule in \"reschedule\" tool you need to fetch an event from \"fetch appointment\" tool using patient enter email (extract event id from here)\n- after appointment reschedule using \"reschedule\" tool update event in \"Update appointment\" tool(pass extracted event id here)\n- after appointment is reschedule send an email to user enter mail that your appointment is reschedule successfully.\nnote: in the parameters date should in this example format 2025-08-18\n\n# If the user want to cancle the appoinment ask the user for email and fetch the data from 'patients' (no memory assumptions give from patients tool) tool by giving the email parameter and show the user and take confirmation and then use \"cancle\" tool to cancle the appoinment in that give the the \"id\" that is in the patients tool fetch it correctly.\n- before appointment cancle in \"cancle appointment\" tool you need to fetch an event from \"fetch appointment\" tool using patient enter email (extract event id from here)\n- after appointment cancle using \"cancle\" tool delete event in \"cancle appointment\" tool(pass extracted event id here)\n- after appointment is cancle send an email to user enter mail that your appointment is cancle successfully.\nNote(very Important): \"id\" should be proper no memory asumptions get fresh data\n\ncurrent timedate :{{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        336,
        -288
      ],
      "id": "a40338a3-7cef-44e2-947f-29ef24b02459",
      "name": "Appointment booking agent"
    }
  ],
  "pinData": {},
  "connections": {
    "cancle": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reschedule": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "patients": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Booking": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Availability": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Doctors": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "Appointment booking agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create appointment": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update appointment": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cancle appointment": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "fetch  appointment": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "city": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Specialisation": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Appointment booking agent": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "9ff09c0e-93f5-4760-bb2d-2c53d773e856",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f2969ff032508a459948d2b3c5f83ba7dd4c3f7f12dfe2eaa2f07527fa7aa0b8"
  },
  "id": "kEnobM6C4Og41hPC",
  "tags": []
}