{
  "name": "Master workflow 2.0",
  "nodes": [
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "tLYf08Rjq4TsWLbC",
          "mode": "list",
          "cachedResultName": "Booking"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "memory": "={{ $('When chat message received').item.json.sessionId }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "memory",
              "displayName": "memory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1280,
        304
      ],
      "id": "7a192beb-83ce-4e12-9c64-97f121ec34cf",
      "name": "appointment booking"
    },
    {
      "parameters": {
        "description": "Call this tool when user wants to reschedule an existing appointment. Pass the user's message and email.",
        "workflowId": {
          "__rl": true,
          "value": "cKa8bN2mwvi1Ixqr",
          "mode": "list",
          "cachedResultName": "reschedule"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "memory": "={{ $('When chat message received').item.json.sessionId }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "memory",
              "displayName": "memory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1584,
        336
      ],
      "id": "441021f7-c811-44d7-84af-102bf4bdfa52",
      "name": "appointment rescheduling"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "xFmCviCcwndqUaG9",
          "mode": "list",
          "cachedResultName": "cancle"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "memory": "={{ $('When chat message received').item.json.sessionId }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "memory",
              "displayName": "memory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1424,
        336
      ],
      "id": "fe10ed0a-0097-4965-be61-9fd63dd56826",
      "name": "appointment cancle"
    },
    {
      "parameters": {
        "content": "                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n                                                                                           \n            Tools to call external workflows",
        "height": 372,
        "width": 732,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1232,
        192
      ],
      "typeVersion": 1,
      "id": "ad0ace92-33fa-490c-8925-457ee265a6e2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an Orchestrator Agent responsible for routing user intents to appropriate sub-workflows and properly formatting their responses.\n\nCORE RESPONSIBILITIES:\n1. Analyze detected intent: {{ $json.output }} (this is the user intention rout as per it)\n2. Process chat message:{{ $('When chat message received').item.json.chatInput }} (send this as it is in the query to the workflow that you call)\n3. Route to appropriate sub-workflow based on intent\n4. Extract and format sub-workflow responses properly\n\nAVAILABLE SUB-WORKFLOWS:\n- appointment_booking: For booking new appointments\n- appointment_rescheduling: For changing existing appointments  \n- appointment_cancle: For canceling appointments\n- intake: For Patient Intake\n\nROUTING LOGIC:\n- If intent is \"booking\" or contains booking keywords → call appointment_booking workflow\n- If intent is \"reschedule\" or contains rescheduling keywords → call appointment_rescheduling workflow\n- If intent is \"cancel\" or contains cancellation keywords → call appointment_cancle workflow\n- If intent is \"general\" or unclear → ask user to specify their need\n- If intent is \"Intake\" or contains → call Intake workflow\n\nCRITICAL OUTPUT PROCESSING:\nWhen receiving sub-workflow responses in format:\n{\n  \"workflow_response\": {\n    \"result\": \"[{\\\"output\\\": \\\"actual_message_here\\\"}]\"\n  }\n}\n\nEXTRACT ONLY the value from the \"output\" field within the result array.\n\nRESPONSE FORMATTING INSTRUCTIONS:\n1. Parse the JSON result array from sub-workflow\n2. Extract the \"output\" value from the first object in the array\n3. Return ONLY the extracted output value as your response\n4. Do NOT include JSON structure, brackets, or escape characters\n5. Present the response as clean, readable text\n",
        "options": {
          "returnIntermediateSteps": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1376,
        0
      ],
      "id": "ce041661-0103-43ea-b353-484865fce072",
      "name": "Master Agent",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! 👋\nMy name is Ashwin. How can I assist you today?",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        80,
        16
      ],
      "id": "fd954736-67e6-4109-87a4-bd71dba74198",
      "name": "When chat message received",
      "webhookId": "ea3624b9-3d1d-4190-9f49-4ac7607ca283"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').item.json.sessionId }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        608,
        320
      ],
      "id": "0d852873-e103-4054-aff1-1fddc953cd1e",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "=You are an AI assistant that classifies the user's intent.\n\nInputs:\n- `chatHistory`: full conversation history → {{ JSON.stringify($json.messages) }}\n- Mostly reply on the chat History\n- MOST Important Don't general message (For message that consist yes, no, y, n, and also the things that user  ) if there is Chat History Present \nYour job:\nAnalyze the **current message** in the context of the **full chat history**.\n\nRules:\n1. If the previous step asked for contact details (email/phone), and the current message provides them, classify based on the **active appointment flow**.\n2. If the message includes email or phone without being explicitly asked, use prior chat context to classify (not as general).\n3. If the previous message asked **“What would you like to discuss”**, and the user replies with any symptoms or discussion topic → classify as **Appointment Booking**.\n4. Do **not** classify these contextually valid replies as `general message`.\n5. If the message is a greeting like “hi” or “hello” **and there's no prior context**, classify as `general message`.\n6. Consider keywords like \"book\", \"schedule\", \"reschedule\", \"cancel\", or discussion-related replies in your decision.\n7. Output should always reflect the actual flow of conversation.\n\nValid outputs (only return one):\n- Appointment Booking  \n- Appointment Rescheduling  \n- Appointment Cancelation  \n- Intake\n\nOutput only the **intent** as plain text — no formatting, no extra text.\n\nin the tool store that input that you get as chathistory"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        832,
        -32
      ],
      "id": "f5ad1f7f-49f0-493d-b165-19397058bcfc",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {
          "groupMessages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        448,
        0
      ],
      "id": "1bc15085-50e2-48db-8073-c54b2926b3dc",
      "name": "Chat Memory Manager"
    },
    {
      "parameters": {
        "description": "for Patient intake",
        "workflowId": {
          "__rl": true,
          "value": "KBTNySAWkU9EUYqQ",
          "mode": "list",
          "cachedResultName": "intake"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "memory": "={{ $('When chat message received').item.json.sessionId }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "memory",
              "displayName": "memory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1728,
        320
      ],
      "id": "2f3766b3-d7e4-491b-9937-06b974940a91",
      "name": "Intake"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1024,
        320
      ],
      "id": "a324c58e-f3ec-4d5d-8ea9-58b8e12d5bfd",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "JoNhtaXNtsqMpdgv",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "appointment booking": {
      "ai_tool": [
        [
          {
            "node": "Master Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "appointment rescheduling": {
      "ai_tool": [
        [
          {
            "node": "Master Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "appointment cancle": {
      "ai_tool": [
        [
          {
            "node": "Master Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Master Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Intake": {
      "ai_tool": [
        [
          {
            "node": "Master Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Master Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "05e9d705-b07c-4a66-bbc1-734ad0a17e59",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f2969ff032508a459948d2b3c5f83ba7dd4c3f7f12dfe2eaa2f07527fa7aa0b8"
  },
  "id": "K6ehMrOwy8pThYcw",
  "tags": []
}